<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN"
  "http://www.w3.org/TR/html4/loose.dtd">
<html>
  <head>
    <title>smtplib.SMTPRecipientsRefused: {'rte': (553, b'5.1.3 The recipient address &lt;rte&gt; is not a valid RFC-5321 address. da23sm9807232edb.34 - gsmtp')} // Werkzeug Debugger</title>
    <link rel="stylesheet" href="?__debugger__=yes&amp;cmd=resource&amp;f=style.css"
        type="text/css">
    <!-- We need to make sure this has a favicon so that the debugger does
         not by accident trigger a request to /favicon.ico which might
         change the application state. -->
    <link rel="shortcut icon"
        href="?__debugger__=yes&amp;cmd=resource&amp;f=console.png">
    <script src="?__debugger__=yes&amp;cmd=resource&amp;f=jquery.js"></script>
    <script src="?__debugger__=yes&amp;cmd=resource&amp;f=debugger.js"></script>
    <script type="text/javascript">
      var TRACEBACK = 4827233680,
          CONSOLE_MODE = false,
          EVALEX = true,
          EVALEX_TRUSTED = false,
          SECRET = "vUboaaYfTARkhX4qy4h6";
    </script>
  </head>
  <body style="background-color: #fff">
    <div class="debugger">
<h1>smtplib.SMTPRecipientsRefused</h1>
<div class="detail">
  <p class="errormsg">smtplib.SMTPRecipientsRefused: {'rte': (553, b'5.1.3 The recipient address &lt;rte&gt; is not a valid RFC-5321 address. da23sm9807232edb.34 - gsmtp')}</p>
</div>
<h2 class="traceback">Traceback <em>(most recent call last)</em></h2>
<div class="traceback">
  
  <ul><li><div class="frame" id="frame-4839955280">
  <h4>File <cite class="filename">"/Library/Frameworks/Python.framework/Versions/3.8/lib/python3.8/site-packages/flask/app.py"</cite>,
      line <em class="line">2464</em>,
      in <code class="function">__call__</code></h4>
  <div class="source library"><pre class="line before"><span class="ws"></span> </pre>
<pre class="line before"><span class="ws">    </span>def __call__(self, environ, start_response):</pre>
<pre class="line before"><span class="ws">        </span>&quot;&quot;&quot;The WSGI server calls the Flask application object as the</pre>
<pre class="line before"><span class="ws">        </span>WSGI application. This calls :meth:`wsgi_app` which can be</pre>
<pre class="line before"><span class="ws">        </span>wrapped to applying middleware.&quot;&quot;&quot;</pre>
<pre class="line current"><span class="ws">        </span>return self.wsgi_app(environ, start_response)</pre>
<pre class="line after"><span class="ws"></span> </pre>
<pre class="line after"><span class="ws">    </span>def __repr__(self):</pre>
<pre class="line after"><span class="ws">        </span>return &quot;&lt;%s %r&gt;&quot; % (self.__class__.__name__, self.name)</pre></div>
</div>

<li><div class="frame" id="frame-4837356688">
  <h4>File <cite class="filename">"/Library/Frameworks/Python.framework/Versions/3.8/lib/python3.8/site-packages/flask/app.py"</cite>,
      line <em class="line">2450</em>,
      in <code class="function">wsgi_app</code></h4>
  <div class="source library"><pre class="line before"><span class="ws">            </span>try:</pre>
<pre class="line before"><span class="ws">                </span>ctx.push()</pre>
<pre class="line before"><span class="ws">                </span>response = self.full_dispatch_request()</pre>
<pre class="line before"><span class="ws">            </span>except Exception as e:</pre>
<pre class="line before"><span class="ws">                </span>error = e</pre>
<pre class="line current"><span class="ws">                </span>response = self.handle_exception(e)</pre>
<pre class="line after"><span class="ws">            </span>except:  # noqa: B001</pre>
<pre class="line after"><span class="ws">                </span>error = sys.exc_info()[1]</pre>
<pre class="line after"><span class="ws">                </span>raise</pre>
<pre class="line after"><span class="ws">            </span>return response(environ, start_response)</pre>
<pre class="line after"><span class="ws">        </span>finally:</pre></div>
</div>

<li><div class="frame" id="frame-4837356448">
  <h4>File <cite class="filename">"/Library/Frameworks/Python.framework/Versions/3.8/lib/python3.8/site-packages/flask/app.py"</cite>,
      line <em class="line">1867</em>,
      in <code class="function">handle_exception</code></h4>
  <div class="source library"><pre class="line before"><span class="ws">            </span># if we want to repropagate the exception, we can attempt to</pre>
<pre class="line before"><span class="ws">            </span># raise it with the whole traceback in case we can do that</pre>
<pre class="line before"><span class="ws">            </span># (the function was actually called from the except part)</pre>
<pre class="line before"><span class="ws">            </span># otherwise, we just raise the error again</pre>
<pre class="line before"><span class="ws">            </span>if exc_value is e:</pre>
<pre class="line current"><span class="ws">                </span>reraise(exc_type, exc_value, tb)</pre>
<pre class="line after"><span class="ws">            </span>else:</pre>
<pre class="line after"><span class="ws">                </span>raise e</pre>
<pre class="line after"><span class="ws"></span> </pre>
<pre class="line after"><span class="ws">        </span>self.log_exception((exc_type, exc_value, tb))</pre>
<pre class="line after"><span class="ws">        </span>server_error = InternalServerError()</pre></div>
</div>

<li><div class="frame" id="frame-4837356976">
  <h4>File <cite class="filename">"/Library/Frameworks/Python.framework/Versions/3.8/lib/python3.8/site-packages/flask/_compat.py"</cite>,
      line <em class="line">39</em>,
      in <code class="function">reraise</code></h4>
  <div class="source library"><pre class="line before"><span class="ws">    </span>import collections.abc as collections_abc</pre>
<pre class="line before"><span class="ws"></span> </pre>
<pre class="line before"><span class="ws">    </span>def reraise(tp, value, tb=None):</pre>
<pre class="line before"><span class="ws">        </span>if value.__traceback__ is not tb:</pre>
<pre class="line before"><span class="ws">            </span>raise value.with_traceback(tb)</pre>
<pre class="line current"><span class="ws">        </span>raise value</pre>
<pre class="line after"><span class="ws"></span> </pre>
<pre class="line after"><span class="ws">    </span>implements_to_string = _identity</pre>
<pre class="line after"><span class="ws"></span> </pre>
<pre class="line after"><span class="ws"></span>else:</pre>
<pre class="line after"><span class="ws">    </span>iterkeys = lambda d: d.iterkeys()</pre></div>
</div>

<li><div class="frame" id="frame-4837356112">
  <h4>File <cite class="filename">"/Library/Frameworks/Python.framework/Versions/3.8/lib/python3.8/site-packages/flask/app.py"</cite>,
      line <em class="line">2447</em>,
      in <code class="function">wsgi_app</code></h4>
  <div class="source library"><pre class="line before"><span class="ws">        </span>ctx = self.request_context(environ)</pre>
<pre class="line before"><span class="ws">        </span>error = None</pre>
<pre class="line before"><span class="ws">        </span>try:</pre>
<pre class="line before"><span class="ws">            </span>try:</pre>
<pre class="line before"><span class="ws">                </span>ctx.push()</pre>
<pre class="line current"><span class="ws">                </span>response = self.full_dispatch_request()</pre>
<pre class="line after"><span class="ws">            </span>except Exception as e:</pre>
<pre class="line after"><span class="ws">                </span>error = e</pre>
<pre class="line after"><span class="ws">                </span>response = self.handle_exception(e)</pre>
<pre class="line after"><span class="ws">            </span>except:  # noqa: B001</pre>
<pre class="line after"><span class="ws">                </span>error = sys.exc_info()[1]</pre></div>
</div>

<li><div class="frame" id="frame-4837356304">
  <h4>File <cite class="filename">"/Library/Frameworks/Python.framework/Versions/3.8/lib/python3.8/site-packages/flask/app.py"</cite>,
      line <em class="line">1952</em>,
      in <code class="function">full_dispatch_request</code></h4>
  <div class="source library"><pre class="line before"><span class="ws">            </span>request_started.send(self)</pre>
<pre class="line before"><span class="ws">            </span>rv = self.preprocess_request()</pre>
<pre class="line before"><span class="ws">            </span>if rv is None:</pre>
<pre class="line before"><span class="ws">                </span>rv = self.dispatch_request()</pre>
<pre class="line before"><span class="ws">        </span>except Exception as e:</pre>
<pre class="line current"><span class="ws">            </span>rv = self.handle_user_exception(e)</pre>
<pre class="line after"><span class="ws">        </span>return self.finalize_request(rv)</pre>
<pre class="line after"><span class="ws"></span> </pre>
<pre class="line after"><span class="ws">    </span>def finalize_request(self, rv, from_error_handler=False):</pre>
<pre class="line after"><span class="ws">        </span>&quot;&quot;&quot;Given the return value from a view function this finalizes</pre>
<pre class="line after"><span class="ws">        </span>the request by converting it into a response and invoking the</pre></div>
</div>

<li><div class="frame" id="frame-4837356352">
  <h4>File <cite class="filename">"/Library/Frameworks/Python.framework/Versions/3.8/lib/python3.8/site-packages/flask/app.py"</cite>,
      line <em class="line">1821</em>,
      in <code class="function">handle_user_exception</code></h4>
  <div class="source library"><pre class="line before"><span class="ws">            </span>return self.handle_http_exception(e)</pre>
<pre class="line before"><span class="ws"></span> </pre>
<pre class="line before"><span class="ws">        </span>handler = self._find_error_handler(e)</pre>
<pre class="line before"><span class="ws"></span> </pre>
<pre class="line before"><span class="ws">        </span>if handler is None:</pre>
<pre class="line current"><span class="ws">            </span>reraise(exc_type, exc_value, tb)</pre>
<pre class="line after"><span class="ws">        </span>return handler(e)</pre>
<pre class="line after"><span class="ws"></span> </pre>
<pre class="line after"><span class="ws">    </span>def handle_exception(self, e):</pre>
<pre class="line after"><span class="ws">        </span>&quot;&quot;&quot;Handle an exception that did not have an error handler</pre>
<pre class="line after"><span class="ws">        </span>associated with it, or that was raised from an error handler.</pre></div>
</div>

<li><div class="frame" id="frame-4837356880">
  <h4>File <cite class="filename">"/Library/Frameworks/Python.framework/Versions/3.8/lib/python3.8/site-packages/flask/_compat.py"</cite>,
      line <em class="line">39</em>,
      in <code class="function">reraise</code></h4>
  <div class="source library"><pre class="line before"><span class="ws">    </span>import collections.abc as collections_abc</pre>
<pre class="line before"><span class="ws"></span> </pre>
<pre class="line before"><span class="ws">    </span>def reraise(tp, value, tb=None):</pre>
<pre class="line before"><span class="ws">        </span>if value.__traceback__ is not tb:</pre>
<pre class="line before"><span class="ws">            </span>raise value.with_traceback(tb)</pre>
<pre class="line current"><span class="ws">        </span>raise value</pre>
<pre class="line after"><span class="ws"></span> </pre>
<pre class="line after"><span class="ws">    </span>implements_to_string = _identity</pre>
<pre class="line after"><span class="ws"></span> </pre>
<pre class="line after"><span class="ws"></span>else:</pre>
<pre class="line after"><span class="ws">    </span>iterkeys = lambda d: d.iterkeys()</pre></div>
</div>

<li><div class="frame" id="frame-4837356208">
  <h4>File <cite class="filename">"/Library/Frameworks/Python.framework/Versions/3.8/lib/python3.8/site-packages/flask/app.py"</cite>,
      line <em class="line">1950</em>,
      in <code class="function">full_dispatch_request</code></h4>
  <div class="source library"><pre class="line before"><span class="ws">        </span>self.try_trigger_before_first_request_functions()</pre>
<pre class="line before"><span class="ws">        </span>try:</pre>
<pre class="line before"><span class="ws">            </span>request_started.send(self)</pre>
<pre class="line before"><span class="ws">            </span>rv = self.preprocess_request()</pre>
<pre class="line before"><span class="ws">            </span>if rv is None:</pre>
<pre class="line current"><span class="ws">                </span>rv = self.dispatch_request()</pre>
<pre class="line after"><span class="ws">        </span>except Exception as e:</pre>
<pre class="line after"><span class="ws">            </span>rv = self.handle_user_exception(e)</pre>
<pre class="line after"><span class="ws">        </span>return self.finalize_request(rv)</pre>
<pre class="line after"><span class="ws"></span> </pre>
<pre class="line after"><span class="ws">    </span>def finalize_request(self, rv, from_error_handler=False):</pre></div>
</div>

<li><div class="frame" id="frame-4837356640">
  <h4>File <cite class="filename">"/Library/Frameworks/Python.framework/Versions/3.8/lib/python3.8/site-packages/flask/app.py"</cite>,
      line <em class="line">1936</em>,
      in <code class="function">dispatch_request</code></h4>
  <div class="source library"><pre class="line before"><span class="ws">            </span>getattr(rule, &quot;provide_automatic_options&quot;, False)</pre>
<pre class="line before"><span class="ws">            </span>and req.method == &quot;OPTIONS&quot;</pre>
<pre class="line before"><span class="ws">        </span>):</pre>
<pre class="line before"><span class="ws">            </span>return self.make_default_options_response()</pre>
<pre class="line before"><span class="ws">        </span># otherwise dispatch to the handler for that endpoint</pre>
<pre class="line current"><span class="ws">        </span>return self.view_functions[rule.endpoint](**req.view_args)</pre>
<pre class="line after"><span class="ws"></span> </pre>
<pre class="line after"><span class="ws">    </span>def full_dispatch_request(self):</pre>
<pre class="line after"><span class="ws">        </span>&quot;&quot;&quot;Dispatches the request and on top of that performs request</pre>
<pre class="line after"><span class="ws">        </span>pre and postprocessing as well as HTTP exception catching and</pre>
<pre class="line after"><span class="ws">        </span>error handling.</pre></div>
</div>

<li><div class="frame" id="frame-4837356496">
  <h4>File <cite class="filename">"/Users/johannesschmid/Festify/src/index.py"</cite>,
      line <em class="line">48</em>,
      in <code class="function">crawler</code></h4>
  <div class="source "><pre class="line before"><span class="ws">    </span>set_global_debugger, WriterThread, pydevd_log, \</pre>
<pre class="line before"><span class="ws">    </span>start_client, start_server, InternalGetBreakpointException, InternalSendCurrExceptionTrace, \</pre>
<pre class="line before"><span class="ws">    </span>InternalSendCurrExceptionTraceProceeded, CommunicationRole, run_as_pydevd_daemon_thread</pre>
<pre class="line before"><span class="ws"></span>from _pydevd_bundle.pydevd_custom_frames import CustomFramesContainer, custom_frames_container_init</pre>
<pre class="line before"><span class="ws"></span>from _pydevd_bundle.pydevd_frame_utils import add_exception_to_frame, remove_exception_from_frame</pre>
<pre class="line current"><span class="ws"></span>from _pydevd_bundle.pydevd_kill_all_pydevd_threads import kill_all_pydev_threads</pre>
<pre class="line after"><span class="ws"></span>from _pydevd_bundle.pydevd_trace_dispatch import (</pre>
<pre class="line after"><span class="ws">    </span>trace_dispatch as _trace_dispatch, global_cache_skips, global_cache_frame_skips, show_tracing_warning)</pre>
<pre class="line after"><span class="ws"></span>from _pydevd_frame_eval.pydevd_frame_eval_main import (</pre>
<pre class="line after"><span class="ws">    </span>frame_eval_func, dummy_trace_dispatch, show_frame_eval_warning)</pre>
<pre class="line after"><span class="ws"></span>from _pydevd_bundle.pydevd_additional_thread_info import set_additional_thread_info</pre></div>
</div>

<li><div class="frame" id="frame-4837356784">
  <h4>File <cite class="filename">"/Users/johannesschmid/Festify/src/services/Crawler.py"</cite>,
      line <em class="line">42</em>,
      in <code class="function">run</code></h4>
  <div class="source "><pre class="line before"><span class="ws">            </span># Read current file content (we assume it always exists)</pre>
<pre class="line before"><span class="ws">            </span>fileContent = event['htmlContent']</pre>
<pre class="line before"><span class="ws"></span> </pre>
<pre class="line before"><span class="ws">            </span>if newContent == fileContent:</pre>
<pre class="line before"><span class="ws">                </span>print('There are no changes my friends!')</pre>
<pre class="line current"><span class="ws">                </span>notifier.notify(event)</pre>
<pre class="line after"><span class="ws">            </span>else:</pre>
<pre class="line after"><span class="ws">                </span># Write new HTML to the file</pre>
<pre class="line after"><span class="ws">                </span>event['htmlContent'] = newContent</pre>
<pre class="line after"><span class="ws">                </span>event['lastChange'] = datetime.datetime.now()</pre>
<pre class="line after"><span class="ws">                </span>datastore_client.put(event)</pre></div>
</div>

<li><div class="frame" id="frame-4837356256">
  <h4>File <cite class="filename">"/Users/johannesschmid/Festify/src/services/Notifier.py"</cite>,
      line <em class="line">32</em>,
      in <code class="function">notify</code></h4>
  <div class="source "><pre class="line before"><span class="ws">        </span>subscribers = subMan.getSubscribers()</pre>
<pre class="line before"><span class="ws">        </span>for subscriber in subscribers:</pre>
<pre class="line before"><span class="ws">            </span>if 'email' in subscriber:</pre>
<pre class="line before"><span class="ws">                </span>msg = Message('Festival News', sender='festify.alerts@gmail.com', recipients=[subscriber['email']])</pre>
<pre class="line before"><span class="ws">                </span>msg.html = render_template('mail.html', event=event)</pre>
<pre class="line current"><span class="ws">                </span>self.mail.send(msg)</pre>
<pre class="line after"><span class="ws"></span> </pre>
<pre class="line after"><span class="ws">    </span>def sendSummary(self, email, events):</pre>
<pre class="line after"><span class="ws">        </span>msg = Message('Festival Summery', sender='festify.alerts@gmail.com', recipients=[email])</pre>
<pre class="line after"><span class="ws">        </span>msg.html = render_template('summarymail.html', events=events)</pre>
<pre class="line after"><span class="ws">        </span>self.mail.send(msg)</pre></div>
</div>

<li><div class="frame" id="frame-4839887152">
  <h4>File <cite class="filename">"/Library/Frameworks/Python.framework/Versions/3.8/lib/python3.8/site-packages/flask_mail.py"</cite>,
      line <em class="line">492</em>,
      in <code class="function">send</code></h4>
  <div class="source library"><pre class="line before"><span class="ws"></span> </pre>
<pre class="line before"><span class="ws">        </span>:param message: a Message instance.</pre>
<pre class="line before"><span class="ws">        </span>&quot;&quot;&quot;</pre>
<pre class="line before"><span class="ws"></span> </pre>
<pre class="line before"><span class="ws">        </span>with self.connect() as connection:</pre>
<pre class="line current"><span class="ws">            </span>message.send(connection)</pre>
<pre class="line after"><span class="ws"></span> </pre>
<pre class="line after"><span class="ws">    </span>def send_message(self, *args, **kwargs):</pre>
<pre class="line after"><span class="ws">        </span>&quot;&quot;&quot;Shortcut for send(msg).</pre>
<pre class="line after"><span class="ws"></span> </pre>
<pre class="line after"><span class="ws">        </span>Takes same arguments as Message constructor.</pre></div>
</div>

<li><div class="frame" id="frame-4839888352">
  <h4>File <cite class="filename">"/Library/Frameworks/Python.framework/Versions/3.8/lib/python3.8/site-packages/flask_mail.py"</cite>,
      line <em class="line">427</em>,
      in <code class="function">send</code></h4>
  <div class="source library"><pre class="line before"><span class="ws">        </span>return self.has_bad_headers()</pre>
<pre class="line before"><span class="ws"></span> </pre>
<pre class="line before"><span class="ws">    </span>def send(self, connection):</pre>
<pre class="line before"><span class="ws">        </span>&quot;&quot;&quot;Verifies and sends the message.&quot;&quot;&quot;</pre>
<pre class="line before"><span class="ws"></span> </pre>
<pre class="line current"><span class="ws">        </span>connection.send(self)</pre>
<pre class="line after"><span class="ws"></span> </pre>
<pre class="line after"><span class="ws">    </span>def add_recipient(self, recipient):</pre>
<pre class="line after"><span class="ws">        </span>&quot;&quot;&quot;Adds another recipient to the message.</pre>
<pre class="line after"><span class="ws"></span> </pre>
<pre class="line after"><span class="ws">        </span>:param recipient: email address of recipient.</pre></div>
</div>

<li><div class="frame" id="frame-4839887632">
  <h4>File <cite class="filename">"/Library/Frameworks/Python.framework/Versions/3.8/lib/python3.8/site-packages/flask_mail.py"</cite>,
      line <em class="line">188</em>,
      in <code class="function">send</code></h4>
  <div class="source library"><pre class="line before"><span class="ws"></span> </pre>
<pre class="line before"><span class="ws">        </span>if message.date is None:</pre>
<pre class="line before"><span class="ws">            </span>message.date = time.time()</pre>
<pre class="line before"><span class="ws"></span> </pre>
<pre class="line before"><span class="ws">        </span>if self.host:</pre>
<pre class="line current"><span class="ws">            </span>self.host.sendmail(sanitize_address(envelope_from or message.sender),</pre>
<pre class="line after"><span class="ws">                               </span>list(sanitize_addresses(message.send_to)),</pre>
<pre class="line after"><span class="ws">                               </span>message.as_bytes() if PY3 else message.as_string(),</pre>
<pre class="line after"><span class="ws">                               </span>message.mail_options,</pre>
<pre class="line after"><span class="ws">                               </span>message.rcpt_options)</pre>
<pre class="line after"><span class="ws"></span> </pre></div>
</div>

<li><div class="frame" id="frame-4839889216">
  <h4>File <cite class="filename">"/Library/Frameworks/Python.framework/Versions/3.8/lib/python3.8/smtplib.py"</cite>,
      line <em class="line">883</em>,
      in <code class="function">sendmail</code></h4>
  <div class="source library"><pre class="line before"><span class="ws">                </span>self.close()</pre>
<pre class="line before"><span class="ws">                </span>raise SMTPRecipientsRefused(senderrs)</pre>
<pre class="line before"><span class="ws">        </span>if len(senderrs) == len(to_addrs):</pre>
<pre class="line before"><span class="ws">            </span># the server refused all our recipients</pre>
<pre class="line before"><span class="ws">            </span>self._rset()</pre>
<pre class="line current"><span class="ws">            </span>raise SMTPRecipientsRefused(senderrs)</pre>
<pre class="line after"><span class="ws">        </span>(code, resp) = self.data(msg)</pre>
<pre class="line after"><span class="ws">        </span>if code != 250:</pre>
<pre class="line after"><span class="ws">            </span>if code == 421:</pre>
<pre class="line after"><span class="ws">                </span>self.close()</pre>
<pre class="line after"><span class="ws">            </span>else:</pre></div>
</div>
</ul>
  <blockquote>smtplib.SMTPRecipientsRefused: {'rte': (553, b'5.1.3 The recipient address &lt;rte&gt; is not a valid RFC-5321 address. da23sm9807232edb.34 - gsmtp')}</blockquote>
</div>

<div class="plain">
  <form action="/?__debugger__=yes&amp;cmd=paste" method="post">
    <p>
      <input type="hidden" name="language" value="pytb">
      This is the Copy/Paste friendly version of the traceback.  <span
      class="pastemessage">You can also paste this traceback into
      a <a href="https://gist.github.com/">gist</a>:
      <input type="submit" value="create paste"></span>
    </p>
    <textarea cols="50" rows="10" name="code" readonly>Traceback (most recent call last):
  File &quot;/Library/Frameworks/Python.framework/Versions/3.8/lib/python3.8/site-packages/flask/app.py&quot;, line 2464, in __call__
    return self.wsgi_app(environ, start_response)
  File &quot;/Library/Frameworks/Python.framework/Versions/3.8/lib/python3.8/site-packages/flask/app.py&quot;, line 2450, in wsgi_app
    response = self.handle_exception(e)
  File &quot;/Library/Frameworks/Python.framework/Versions/3.8/lib/python3.8/site-packages/flask/app.py&quot;, line 1867, in handle_exception
    reraise(exc_type, exc_value, tb)
  File &quot;/Library/Frameworks/Python.framework/Versions/3.8/lib/python3.8/site-packages/flask/_compat.py&quot;, line 39, in reraise
    raise value
  File &quot;/Library/Frameworks/Python.framework/Versions/3.8/lib/python3.8/site-packages/flask/app.py&quot;, line 2447, in wsgi_app
    response = self.full_dispatch_request()
  File &quot;/Library/Frameworks/Python.framework/Versions/3.8/lib/python3.8/site-packages/flask/app.py&quot;, line 1952, in full_dispatch_request
    rv = self.handle_user_exception(e)
  File &quot;/Library/Frameworks/Python.framework/Versions/3.8/lib/python3.8/site-packages/flask/app.py&quot;, line 1821, in handle_user_exception
    reraise(exc_type, exc_value, tb)
  File &quot;/Library/Frameworks/Python.framework/Versions/3.8/lib/python3.8/site-packages/flask/_compat.py&quot;, line 39, in reraise
    raise value
  File &quot;/Library/Frameworks/Python.framework/Versions/3.8/lib/python3.8/site-packages/flask/app.py&quot;, line 1950, in full_dispatch_request
    rv = self.dispatch_request()
  File &quot;/Library/Frameworks/Python.framework/Versions/3.8/lib/python3.8/site-packages/flask/app.py&quot;, line 1936, in dispatch_request
    return self.view_functions[rule.endpoint](**req.view_args)
  File &quot;/Users/johannesschmid/Festify/src/index.py&quot;, line 48, in crawler
    from _pydevd_bundle.pydevd_kill_all_pydevd_threads import kill_all_pydev_threads
  File &quot;/Users/johannesschmid/Festify/src/services/Crawler.py&quot;, line 42, in run
    notifier.notify(event)
  File &quot;/Users/johannesschmid/Festify/src/services/Notifier.py&quot;, line 32, in notify
    self.mail.send(msg)
  File &quot;/Library/Frameworks/Python.framework/Versions/3.8/lib/python3.8/site-packages/flask_mail.py&quot;, line 492, in send
    message.send(connection)
  File &quot;/Library/Frameworks/Python.framework/Versions/3.8/lib/python3.8/site-packages/flask_mail.py&quot;, line 427, in send
    connection.send(self)
  File &quot;/Library/Frameworks/Python.framework/Versions/3.8/lib/python3.8/site-packages/flask_mail.py&quot;, line 188, in send
    self.host.sendmail(sanitize_address(envelope_from or message.sender),
  File &quot;/Library/Frameworks/Python.framework/Versions/3.8/lib/python3.8/smtplib.py&quot;, line 883, in sendmail
    raise SMTPRecipientsRefused(senderrs)
smtplib.SMTPRecipientsRefused: {'rte': (553, b'5.1.3 The recipient address &lt;rte&gt; is not a valid RFC-5321 address. da23sm9807232edb.34 - gsmtp')}</textarea>
  </form>
</div>
<div class="explanation">
  The debugger caught an exception in your WSGI application.  You can now
  look at the traceback which led to the error.  <span class="nojavascript">
  If you enable JavaScript you can also use additional features such as code
  execution (if the evalex feature is enabled), automatic pasting of the
  exceptions and much more.</span>
</div>
      <div class="footer">
        Brought to you by <strong class="arthur">DON'T PANIC</strong>, your
        friendly Werkzeug powered traceback interpreter.
      </div>
    </div>

    <div class="pin-prompt">
      <div class="inner">
        <h3>Console Locked</h3>
        <p>
          The console is locked and needs to be unlocked by entering the PIN.
          You can find the PIN printed out on the standard output of your
          shell that runs the server.
        <form>
          <p>PIN:
            <input type=text name=pin size=14>
            <input type=submit name=btn value="Confirm Pin">
        </form>
      </div>
    </div>
  </body>
</html>

<!--

Traceback (most recent call last):
  File "/Library/Frameworks/Python.framework/Versions/3.8/lib/python3.8/site-packages/flask/app.py", line 2464, in __call__
    return self.wsgi_app(environ, start_response)
  File "/Library/Frameworks/Python.framework/Versions/3.8/lib/python3.8/site-packages/flask/app.py", line 2450, in wsgi_app
    response = self.handle_exception(e)
  File "/Library/Frameworks/Python.framework/Versions/3.8/lib/python3.8/site-packages/flask/app.py", line 1867, in handle_exception
    reraise(exc_type, exc_value, tb)
  File "/Library/Frameworks/Python.framework/Versions/3.8/lib/python3.8/site-packages/flask/_compat.py", line 39, in reraise
    raise value
  File "/Library/Frameworks/Python.framework/Versions/3.8/lib/python3.8/site-packages/flask/app.py", line 2447, in wsgi_app
    response = self.full_dispatch_request()
  File "/Library/Frameworks/Python.framework/Versions/3.8/lib/python3.8/site-packages/flask/app.py", line 1952, in full_dispatch_request
    rv = self.handle_user_exception(e)
  File "/Library/Frameworks/Python.framework/Versions/3.8/lib/python3.8/site-packages/flask/app.py", line 1821, in handle_user_exception
    reraise(exc_type, exc_value, tb)
  File "/Library/Frameworks/Python.framework/Versions/3.8/lib/python3.8/site-packages/flask/_compat.py", line 39, in reraise
    raise value
  File "/Library/Frameworks/Python.framework/Versions/3.8/lib/python3.8/site-packages/flask/app.py", line 1950, in full_dispatch_request
    rv = self.dispatch_request()
  File "/Library/Frameworks/Python.framework/Versions/3.8/lib/python3.8/site-packages/flask/app.py", line 1936, in dispatch_request
    return self.view_functions[rule.endpoint](**req.view_args)
  File "/Users/johannesschmid/Festify/src/index.py", line 48, in crawler
    from _pydevd_bundle.pydevd_kill_all_pydevd_threads import kill_all_pydev_threads
  File "/Users/johannesschmid/Festify/src/services/Crawler.py", line 42, in run
    notifier.notify(event)
  File "/Users/johannesschmid/Festify/src/services/Notifier.py", line 32, in notify
    self.mail.send(msg)
  File "/Library/Frameworks/Python.framework/Versions/3.8/lib/python3.8/site-packages/flask_mail.py", line 492, in send
    message.send(connection)
  File "/Library/Frameworks/Python.framework/Versions/3.8/lib/python3.8/site-packages/flask_mail.py", line 427, in send
    connection.send(self)
  File "/Library/Frameworks/Python.framework/Versions/3.8/lib/python3.8/site-packages/flask_mail.py", line 188, in send
    self.host.sendmail(sanitize_address(envelope_from or message.sender),
  File "/Library/Frameworks/Python.framework/Versions/3.8/lib/python3.8/smtplib.py", line 883, in sendmail
    raise SMTPRecipientsRefused(senderrs)
smtplib.SMTPRecipientsRefused: {'rte': (553, b'5.1.3 The recipient address <rte> is not a valid RFC-5321 address. da23sm9807232edb.34 - gsmtp')}

-->
